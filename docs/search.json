[
  {
    "objectID": "sine.html",
    "href": "sine.html",
    "title": "Sine function",
    "section": "",
    "text": "The plot below allows you to control parameters used in the sine function. Experiment with the period, amplitude, and phase shift to see how they affect the graph.\n#| standalone: true\n#| viewerHeight: 420\n\nfrom shiny import App, render, ui\nimport numpy as np\nimport matplotlib.pyplot as plt\n\napp_ui = ui.page_fluid(\n    ui.layout_sidebar(\n        ui.panel_sidebar(\n            ui.input_slider(\"period\", \"Period\", 0.5, 2, 1, step=0.5),\n            ui.input_slider(\"amplitude\", \"Amplitude\", 0, 2, 1, step=0.25),\n            ui.input_slider(\"shift\", \"Phase shift\", 0, 2, 0, step=0.1),\n        ),\n        ui.panel_main(\n            ui.output_plot(\"plot\"),\n        ),\n    ),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.plot(alt=\"Sine function\")\n    def plot():\n        t = np.arange(0.0, 4.0, 0.01)\n        s = input.amplitude() * np.sin(\n            (2 * np.pi / input.period()) * (t - input.shift() / 2)\n        )\n        fig, ax = plt.subplots()\n        ax.set_ylim([-2, 2])\n        ax.plot(t, s)\n        ax.grid()\n\n\napp = App(app_ui, server)\nuse ferris_says::say; // from the previous step\nuse std::io::{stdout, BufWriter};\n\nfn main() {\n    let stdout = stdout();\n    let message = String::from(\"Hello fellow Rustaceans!\");\n    let width = message.chars().count();\n\n    let mut writer = BufWriter::new(stdout.lock());\n    say(message.as_bytes(), width, &mut writer).unwrap();\n}"
  },
  {
    "objectID": "docu/about.html",
    "href": "docu/about.html",
    "title": "Krishnakant Ammanamanchi",
    "section": "",
    "text": "Hi , I am Krishnakant Ammanamanchi , welcome to my Site/Blog or whatever.\nI am unsure what to call this anymore. The gist of the site is to capture the projects and skills that i am currently working on and document them as i keep on learning.\nFeel free to jump to any of the above sections.(Most of the sections are work in progress but eventually everything will be in order)\nHappy exploring !!!\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "docu/anotherpage.html",
    "href": "docu/anotherpage.html",
    "title": "Another Page",
    "section": "",
    "text": "we would like to check whether quarto automatically creates html for you once included on main site"
  },
  {
    "objectID": "docu/SEA/Fiancial Mathematics.html",
    "href": "docu/SEA/Fiancial Mathematics.html",
    "title": "Financial mathematics",
    "section": "",
    "text": "Implementing code is actually one of the best ways to learn both the code and theory given that the focus is on both and not purely on the coding aspect"
  },
  {
    "objectID": "docu/SEA/practice.html",
    "href": "docu/SEA/practice.html",
    "title": "Quarto HTML Basics",
    "section": "",
    "text": "This a Quarto document. To learn more about Quarto see https://quarto.org.\nClick the Code button in the header to see the full source code of this document.\nHere we call the R summary() function—the function’s output is included immediately below:\n\nsummary(cars)"
  },
  {
    "objectID": "docu/SEA/practice.html#plot-output",
    "href": "docu/SEA/practice.html#plot-output",
    "title": "Quarto HTML Basics",
    "section": "Plot Output",
    "text": "Plot Output\nYou can also embed plots, for example:\n\nlibrary(ggplot2)\ndat <- data.frame(cond = rep(c(\"A\", \"B\"), each=10),\n                  xvar = 1:20 + rnorm(20,sd=3),\n                  yvar = 1:20 + rnorm(20,sd=3))\n\nggplot(dat, aes(x=xvar, y=yvar)) +\n    geom_point(shape=1) + \n    geom_smooth() \n\nNote that the code-fold: true parameter was added to the code chunk to hide the code by default (click “Code” above the plot to see the code).\nThe use of the label and fig-cap options make this a cross-referenceable figure (see )."
  },
  {
    "objectID": "docu/SEA/practice.html#interactivity",
    "href": "docu/SEA/practice.html#interactivity",
    "title": "Quarto HTML Basics",
    "section": "Interactivity",
    "text": "Interactivity\nYou can also add interactive plots. For example:\n\nlibrary(dygraphs)\ndygraph(nhtemp) %>% \n  dyRangeSelector(dateWindow = c(\"1920-01-01\", \"1960-01-01\"))"
  },
  {
    "objectID": "docu/SEA/practice.html#tables",
    "href": "docu/SEA/practice.html#tables",
    "title": "Quarto HTML Basics",
    "section": "Tables",
    "text": "Tables\nUse the knitr::kable() function to print tables as HTML:\n\nknitr::kable(head(ggplot2::diamonds))"
  },
  {
    "objectID": "docu/SEA/practice.html#latex-math",
    "href": "docu/SEA/practice.html#latex-math",
    "title": "Quarto HTML Basics",
    "section": "LaTeX Math",
    "text": "LaTeX Math\nYou can also include LaTeX math:\n\nP\\left(A=2\\middle|\\frac{A^2}{B}>4\\right)"
  },
  {
    "objectID": "docu/SEA/index.html",
    "href": "docu/SEA/index.html",
    "title": "Sea of Everything",
    "section": "",
    "text": "Inspired by the Sea of foundations By Professro Ravi Vakil , which covers pretty much everything one needs to master Algebraic geometry. I have titled this section as Sea of Everything where i would be covering all my current interests related to fields of financial mathematics,programming , machine learning , crypto , etc…\nThis whole section under Sea of Everything would mostly function as a blog, conventional blogs are very badly designed and difficult to navigate as of now i have just decided to maintain my articles as part of this website. If it gets cumbersome to maintain I might convert the webpage into a full blown traditional blog , but I am skeptical as of now."
  },
  {
    "objectID": "docu/SEA/programming.html",
    "href": "docu/SEA/programming.html",
    "title": "Programing",
    "section": "",
    "text": "This will include programming related notes and documents\n`"
  },
  {
    "objectID": "docu/SEA/math.html",
    "href": "docu/SEA/math.html",
    "title": "Math",
    "section": "",
    "text": "$+ $\n\\Pi + \\Gamma\na \\bmod b\nx \\equiv a \\pmod{b}\n\\lim\\limits_{x \\to \\infty} \\exp(-x) =0\nk_{n+1} = n^2 +k_n^2 - k_{n-1}\n\\dots\n\nlibrary(Sim.DiffProc)\n\nPackage 'Sim.DiffProc', version 4.8\nbrowseVignettes('Sim.DiffProc') for more informations.\n\nmu=1;sigma=0.5;theta=2\n x0=0;y0=0;init=c(x0,y0)\nf <- expression(1/mu*(theta-x), x)  \ng <- expression(sqrt(sigma),0)\nmod2d <- snssde2d(drift=f,diffusion=g,M=500,Dt=0.015,x0=c(x=0,y=0))\n## true values of first and second moment at time 10\nEx <- function(t) theta+(x0-theta)*exp(-t/mu)\nVx <- function(t) 0.5*sigma*mu *(1-exp(-2*(t/mu)))\nEy <- function(t) y0+theta*t+(x0-theta)*mu*(1-exp(-t/mu))\nVy <- function(t) sigma*mu^3*((t/mu)-2*(1-exp(-t/mu))+0.5*(1-exp(-2*(t/mu))))\ncovxy <- function(t) 0.5*sigma*mu^2 *(1-2*exp(-t/mu)+exp(-2*(t/mu)))\ntvalue = list(m1=Ex(15),m2=Ey(15),S1=Vx(15),S2=Vy(15),C12=covxy(15))\n ## function of the statistic(s) of interest.\nsde.fun2d <- function(data, i){\n   d <- data[i,]\n   return(c(mean(d$x),mean(d$y),var(d$x),var(d$y),cov(d$x,d$y)))\n}\n ## Parallel Monte-Carlo of 'OUI' at time 10\nmcm.mod2d = MCM.sde(mod2d,statistic=sde.fun2d,time=15,R=10,exact=tvalue,parallel=\"snow\",ncpus=2)\nmcm.mod2d$MC\n\n         Exact   Estimate       Bias Std.Error      RMSE\nm1   1.9999994  1.9947838 -0.0052156 0.0084867 0.0259890\nm2  28.0000006 27.9491473 -0.0508533 0.0409902 0.1330708\nS1   0.2500000  0.2429658 -0.0070342 0.0040356 0.0140019\nS2   6.7500003  6.4631188 -0.2868815 0.1478809 0.5283180\nC12  0.2499998  0.2355823 -0.0144175 0.0137807 0.0437839\n          CI( 2.5 % , 97.5 % )\nm1   ( 1.9781502 , 2.0114174 )\nm2  ( 27.868808 , 28.0294866 )\nS1   ( 0.2350562 , 0.2508754 )\nS2     ( 6.1732776 , 6.75296 )\nC12   ( 0.2085726 , 0.262592 )\n\n\n\\begin{equation*}\n\\begin{cases}\n\\begin{split}\ndX_{t} &= \\left( \\alpha \\, X_{t} \\, \\left( 1 - \\frac{X_{t}}{\\beta} \\right) - \\frac{\\delta \\, X_{t}^2 \\, Y_{t}}{\\left( \\kappa + X_{t}^2 \\right)} \\right) \\:dt +  \\sqrt{\\sigma_{1}} \\, X_{t} \\, \\left( 1 - Y_{t} \\right) \\:dW_{1,t} \\\\\ndY_{t} &= \\left( \\frac{\\gamma \\, X_{t}^2 \\, Y_{t}}{\\left( \\kappa + X_{t}^2 \\right)} - \\mu \\, Y_{t}^2 \\right) \\:dt +  \\left| \\sigma_{2}\\right|  \\, Y_{t} \\, \\left( 1 - X_{t} \\right) \\:dW_{2,t}\n\\end{split}\n\\end{cases}\n\\end{equation*}\n\\begin{equation}\n\\begin{cases}\n\\begin{split}\n\\frac{d}{dt} m_{1}(t) ~&= \\frac{\\left( \\theta - m_{1}(t) \\right)}{\\mu} \\\\\n\\frac{d}{dt} m_{2}(t) ~&= m_{1}(t) \\\\\n\\frac{d}{dt} S_{1}(t) ~&= \\sigma - 2 \\, \\left( \\frac{S_{1}(t)}{\\mu} \\right) \\\\\n\\frac{d}{dt} S_{2}(t) ~&= 2 \\, C_{12}(t) \\\\\n\\frac{d}{dt} C_{12}(t) &= S_{1}(t) - \\frac{C_{12}(t)}{\\mu}\n\\end{split}\n\\end{cases}\n\\end{equation}\n\\begin{equation}\n\\left.\\begin{aligned}\n        B'&=-\\partial \\times E,\\\\\n        E'&=\\partial \\times B - 4\\pi j,\n       \\end{aligned}\n\\right\\}\n\\qquad \\text{Maxwell's equations}\n\\end{equation}\n\n# Load required packages\nlibrary(fpp3)\n\n── Attaching packages ──────────────────────────────────────────── fpp3 0.4.0 ──\n\n\n✔ tibble      3.1.8      ✔ tsibble     1.1.3 \n✔ dplyr       1.0.10     ✔ tsibbledata 0.4.1 \n✔ tidyr       1.2.1      ✔ feasts      0.3.0 \n✔ lubridate   1.9.0      ✔ fable       0.3.2 \n✔ ggplot2     3.4.0      \n\n\n── Conflicts ───────────────────────────────────────────────── fpp3_conflicts ──\n✖ lubridate::date()    masks base::date()\n✖ dplyr::filter()      masks stats::filter()\n✖ tsibble::intersect() masks base::intersect()\n✖ tsibble::interval()  masks lubridate::interval()\n✖ dplyr::lag()         masks stats::lag()\n✖ tsibble::setdiff()   masks base::setdiff()\n✖ tsibble::union()     masks base::union()\n\n# Plot one time series\naus_retail %>%\n  filter(`Series ID`==\"A3349640L\") %>%\n  autoplot(Turnover)\n\n\n\n# Produce some forecasts\naus_retail %>%\n  filter(`Series ID`==\"A3349640L\") %>%\n  model(ETS(Turnover)) %>%\n  forecast(h = \"2 years\")\n\n# A fable: 24 x 6 [1M]\n# Key:     State, Industry, .model [1]\n   State    Industry                          .model    Month     Turnover .mean\n   <chr>    <chr>                             <chr>     <mth>       <dist> <dbl>\n 1 Victoria Cafes, restaurants and catering … ETS(T… 2019 Jan  N(608, 978)  608.\n 2 Victoria Cafes, restaurants and catering … ETS(T… 2019 Feb N(551, 1129)  551.\n 3 Victoria Cafes, restaurants and catering … ETS(T… 2019 Mar N(622, 1856)  622.\n 4 Victoria Cafes, restaurants and catering … ETS(T… 2019 Apr N(609, 2190)  609.\n 5 Victoria Cafes, restaurants and catering … ETS(T… 2019 May N(602, 2539)  602.\n 6 Victoria Cafes, restaurants and catering … ETS(T… 2019 Jun N(577, 2704)  577.\n 7 Victoria Cafes, restaurants and catering … ETS(T… 2019 Jul N(607, 3413)  607.\n 8 Victoria Cafes, restaurants and catering … ETS(T… 2019 Aug N(626, 4072)  626.\n 9 Victoria Cafes, restaurants and catering … ETS(T… 2019 Sep N(614, 4358)  614.\n10 Victoria Cafes, restaurants and catering … ETS(T… 2019 Oct N(624, 4942)  624.\n# … with 14 more rows"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Shinylive applications embedded in Quarto documents",
    "section": "",
    "text": "Embedded Shiny application\nTo display a running Shiny app, use a code block with {shinylive-python}.\n#| standalone: true\n#| viewerHeight: 420\n\nfrom shiny import App, render, ui\nimport numpy as np\nimport matplotlib.pyplot as plt\n\napp_ui = ui.page_fluid(\n    ui.layout_sidebar(\n        ui.panel_sidebar(\n            ui.input_slider(\"period\", \"Period\", 0.5, 4, 1, step=0.5),\n            ui.input_slider(\"amplitude\", \"Amplitude\", 0, 2, 1, step=0.25),\n            ui.input_slider(\"shift\", \"Phase shift\", 0, 2, 0, step=0.1),\n        ),\n        ui.panel_main(\n            ui.output_plot(\"plot\"),\n        ),\n    ),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.plot(alt=\"Sine wave\")\n    def plot():\n        t = np.arange(0.0, 4.0, 0.01)\n        s = input.amplitude() * np.sin(\n            2 * np.pi / input.period() * (t - input.shift() / 2)\n        )\n        fig, ax = plt.subplots()\n        ax.set_ylim([-2, 2])\n        ax.plot(t, s)\n        ax.grid()\n\n\napp = App(app_ui, server)\nNote that the code block currently must have #| standalone: true, which indicates that the code represents a complete Shiny application, as opposed to one which has parts spread throughout the document (which will be supported in the future).\nThe example above also uses #| viewerHeight: 420 to set the height of the viewer to 420 pixels.\n\n\nEditor with app\nIf you want to display an editor panel with along with the running application, use #| components: [editor, viewer]. Users will be able to use the editor to modify the code and re-run the application.\n\n#| standalone: true\n#| components: [editor, viewer]\n\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"N\", 0, 100, 40),\n    ui.output_text_verbatim(\"txt\"),\n)\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"The value of n*2 is {input.n() * 2}\"\n\napp = App(app_ui, server)\n\nThe default width in a Quarto document is somewhat narrow for showing the editor and viewer next to each other. It can be made wider with Quarto layout containers. In the example above it uses column-page-inset-right.\n\nVertically stacked components\nTo display the editor above the code, use #| layout: vertical.\n#| standalone: true\n#| components: [editor, viewer]\n#| layout: vertical\n#| viewerHeight: 300\n\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_slider(\"n\", \"N\", 0, 100, 40),\n    ui.output_text_verbatim(\"txt\"),\n)\n\ndef server(input, output, session):\n    @output\n    @render.text\n    def txt():\n        return f\"The value of n*2 is {input.n() * 2}\"\n\napp = App(app_ui, server)\n\n\nMultiple files\nFor apps that have multiple files, you can mark the start of each file with ## file: filename.py.\nBinary files can be used with ## type: binary, and the file must be base64-encoded. This can be done with the base64 command line tool.\n#| standalone: true\n#| components: [editor, viewer]\n#| layout: vertical\n## file: app.py\nfrom pathlib import Path\nfrom shiny import App, render, ui, Inputs, Outputs, Session\nfrom utils import square\n\napp_ui = ui.page_fluid(\n    ui.row(\n        ui.column(6,\n            ui.input_slider(\"n\", \"Make a Shiny square:\", min=0, max=6, value=2)\n        ),\n        ui.column(6,\n            ui.output_ui(\"images\"),\n        )\n    )\n)\n\ndef server(input: Inputs, output: Outputs, session: Session):\n    @output\n    @render.ui\n    def images():\n        img = ui.img(src=\"logo.png\", style=\"width: 40px;\")\n        return square(img, input.n())\n\nwww_dir = Path(__file__).parent / \"www\"\napp = App(app_ui, server, static_assets=www_dir)\n\n## file: utils.py\nfrom shiny import ui\n\ndef square(x, n):\n    row = ui.div([x] * n)\n    return ui.div([row] * n)\n\n## file: www/logo.png\n## type: binary\n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"
  }
]