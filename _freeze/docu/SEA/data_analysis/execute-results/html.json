{
  "hash": "e5176c7ae37a14244577278d30568dcf",
  "result": {
    "markdown": "---\ntitle: Data Analysis for Python\nabstract: Implementation of the book on the same topic by Wes McKinney\nkeep-ipynb: true\ntoc: true\nexecute:\n  freeze: true\n  evaluate: false\n---\n\n## Introduction\n\nList of important libraries and tools that are mainly used for data analysis in python\n* Numpy: Numerical Python has great array processing capabilities. Mostly used to pass data to algorithims from datasets/libraries. It gives the ability to perform linear algebra operations ,Fourier transforms with ease. \n\n* Pandas: Mostly used to manipulate and create new data structures. \n\n* Matplotlib: Used for plots and other two dimensional data visualizations \n\n* Jupyter: Commonly used for testing , running iterations, debugging before sending off the code to production. Jupyter notebook supports R , python and julia programming languages as well as markdown for documenting the files\n\n* SciPy: Scientific computing library. Provides functionality to integrate , optimise , signal processing,etc... \n\n* Scikit-learn: The library has machine learning models which can be used out of the box. Has all the standard machine learning models.\n\nAll of the above tools and libraries are very well documented and navigating through them is relatively easy.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n#Importing Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels as sm\n```\n:::\n\n\n## Python\n\n### Ipython Shortcuts\n\n* %a: Commonly known as magic functions. Specific to Ipython kernel\n\n* %run a.py: runs the python file a.py located in the same working directory\n\n* %quickref: gives quick reference\n\n* help - help function for Ipython\n\n* a?: gives general information about the object a\n\n* %load a.py: Import a.py script into the code cell\n\n* %paste: Will paste contents in the keyboard and execute the as a single block\n\n* %timeit b:Gives the execution time of python statement b.Can be run muliple times giving the average time over all iterations as output.\n\n* %debug: Various positional arguments available to debug a python statement.\n\n* %pwd: Gives current path as output\n\n* %xdel variable : Deletes teh varaible and attempt to clear all references to the object in python\n\n### Python\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n#checks the current versiom of kernel being used\nimport sys\nprint(sys.executable)\nprint(sys.version)\nprint(sys.version_info)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n/opt/homebrew/opt/python@3.10/bin/python3.10\n3.10.9 (main, Dec 15 2022, 17:11:09) [Clang 14.0.0 (clang-1400.0.29.202)]\nsys.version_info(major=3, minor=10, micro=9, releaselevel='final', serial=0)\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](data_analysis_files/figure-html/cell-4-output-1.png){width=450 height=439}\n:::\n:::\n\n\n",
    "supporting": [
      "data_analysis_files"
    ],
    "filters": [],
    "includes": {}
  }
}