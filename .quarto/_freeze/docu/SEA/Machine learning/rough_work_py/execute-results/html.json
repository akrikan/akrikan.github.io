{
  "hash": "9b792273b739e930403d568fe0994965",
  "result": {
    "markdown": "---\ntitle: python rought work\n\nformat: html\n---\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef normal_distribution(x,m,sigma):\n  pdf  = (1/math.sqrt(2*math.pi*sigma))*np.exp((x-m)**2/(-2*sigma**2))\n  return pdf\n\n\ndef half_normal(x,sigma):\n  pdf = (math.sqrt(2)/sigma*math.sqrt(math.pi))*np.exp(-x**2/(2*sigma**2))\n  return pdf\n\ndef student_t(x,mu,scale,vu):\n  pdf = (1+((1/vu)*((x-mu)/scale)**2))**(-(vu+1)/2)\n  return pdf\n\nx1 = np.arange(-10,10,0.01)\nx2 = np.arange(0,10,0.01)\nz = normal_distribution(x1,0,2)\ny = half_normal(x2,1)\nstudent_tvec = np.vectorize(student_t)\n\nw1 = student_tvec(x1,0,1,1)\nw2 = student_tvec(x1,0,2,2)\nw3 = student_tvec(x1,0,2,1)\nw4 = student_tvec(x1,0,5,5)\nprint(w1)\nplt.clf()\n#fig, [ax, ax1,ax3] = plt.subplots(3, 1)\nplt.plot(x1,z,label=\"normal\")\n#ax1.plot(x2,y)\nplt.plot(x1,w1,label = \"w1\")\nplt.plot(x1,w2,label = \"w2\")\nplt.plot(x1,w3,label = \"w3\")\nplt.plot(x1,w4,label = \"w4\")\nplt.legend()\nplt.show()\n\nmath\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[0.00990099 0.00992063 0.00994032 ... 0.00996007 0.00994032 0.00992063]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](rough_work_py_files/figure-html/cell-2-output-2.png){width=571 height=411}\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n<module 'math' from '/opt/homebrew/Cellar/python@3.10/3.10.9/Frameworks/Python.framework/Versions/3.10/lib/python3.10/lib-dynload/math.cpython-310-darwin.so'>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "rough_work_py_files"
    ],
    "filters": [],
    "includes": {}
  }
}